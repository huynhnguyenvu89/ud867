task groovy << {}

def foo ="One million dollars"
def myClosure = {
  println "Hello from a groovy"
  println "The value of foo is $foo"
}
myClosure()
foo = "Two million dollars"
def baz = myClosure
def bar = baz
bar()

def doubleIt = { x ->
  x + x
}
//This is a function
def applyTwice(func, arg){
  func(func(arg))
}
//This is a closure
def applyTwice2 = {func, arg -> func(func(arg))}
def fu = 5
def fuDoubledTwice = applyTwice2(doubleIt, fu)
println "Applying doubleIt twice to $fu equals $fuDoubledTwice"

def myList = ["Android", "Groovy", "Gradle"]
def printIt = {it -> println "List item $it"}
myList.each(printIt)

class GroovyGreeter {
  String greeting = "Default greeting"
  def printGreeting(){println "Greeting: $greeting"}
}
def myGroovyGreeter = new GroovyGreeter()
myGroovyGreeter.greeting = "My custom greeting"
myGroovyGreeter.printGreeting()

def greetingClosure = {
  greeting = "Greeting from closure"
  printGreeting()
}
greetingClosure.delegate = myGroovyGreeter
greetingClosure()
